[["index.html", "Analysis of pro-level competitive matches in Counter-Strike Global Offensive Chapter 1 Introduction", " Analysis of pro-level competitive matches in Counter-Strike Global Offensive Anh-Vu Nguyen, Malaika Gupta, Wael Boukhobza 2021-12-12 Chapter 1 Introduction dhsth "],["data-sources.html", "Chapter 2 Data sources 2.1 What match to analyse? 2.2 Getting the demo files", " Chapter 2 Data sources We are going to work with files generated by the game itself. They are called demo files and were created by developers to replay matches from any point of view. 2.1 What match to analyse? There are thousands of pro-level matches but only the top teams are able to play in tournaments that are called Majors. We chose to analyse Major tournaments as the strategies and team plays of the top 20 teams are the most copied by other players. Additionally the consistent level of performance of higher level teams, and the controlled environment that offline tournaments allow means that is will be easier to get meaningful data as it is less likely that teams will be influenced by external factors (internet connection, differnet time-zone and schedule) . 2.2 Getting the demo files Each match is recorded in a demo file generated by the game. A demo file contains all the raw data of a match, and is intended to be read by the game to replay the match. Demo files of Majors can be downloaded from the game, or from the HLTV website. We used HLTV to download them as it can conveniently be parsed. HLTV is a site that compiles all pro-level matches. It collaborates with event organizers to display real-time statistics and scores, and also shares recorded demo files. The code we used to automatically parse the html pages are included in the github repository. The downloaded demo files resulted in a total of 82.1GB of data, and as such has not been uploaded. "],["data-transformation.html", "Chapter 3 Data transformation 3.1 Getting readable data 3.2 Kills data 3.3 Damages data 3.4 Flashes data 3.5 grenades data", " Chapter 3 Data transformation 3.1 Getting readable data To generate readable data from the demo files, we used a python library to parse them in JSON files, resulting in 625 successful conversions and 20GB of pre-processed data. The pre-processed data is still very much dirty as some files are corrupted, and in-game technical pauses, warmup rounds, game restarts, etc, can mess up the format and add rounds. We still managed to clean the data with the python library cleaning functions. The following Python notebook explains the data structure of a generated JSON file: https://github.com/anhvung/EDAV_Project_Report/blob/main/Python%20notebooks/Understanding%20the%20data.ipynb To narrow down the amount of data points, we chose to merge all the matches json files into 5 json files containing only information that we judge relevant for analysis : kills data, damages data, flashed data,and grenades data. 3.2 Kills data 3.3 Damages data 3.4 Flashes data 3.5 grenades data "],["missing-values.html", "Chapter 4 Missing values 4.1 Kills data 4.2 Damages data", " Chapter 4 Missing values Well have a look at the missing data. For this analysis, be chose a subset of 30 random matches for a reasonable processing time. Of all the matches data, only the kills and damages data frames contained missing data. 4.1 Kills data The kills data frame contains information about each confirmed kill by any of the 10 players of both teams. (Variables beginning with flash) Flash grenades are thrown to temporarily blind the enemy players. The missing data is expected: when a player is killed, it has not necessarily been flashed by a flash grenade before (patterns 1,2,3,5 in the graph below). We can see that the vast majority of kills are done without the victim being flashed. Less than 10 percent of the kills are done with the help of flash grenades (patterns 4,6 in the graph below). (Variables beginning with assist) Similarly less than 15 percent of kills are helped with assists (patterns 2,5 in the graph below). An assist occurs when a teammate deals more than 40 points of damage to a player before that player is killed. The teammate then gets the assist for dealing damages, thus helping the kill. (Variables beginning with playerTraded) A player is traded when one of his teammates get an immediate revenge on the enemy player who got the initial kill (patterns 3,5,6 in the graph below). Again, about 15 percent of the kills are traded. A trade is important because it ensures that the other team does not get the numerical advantage. Surprisingly, there are no complete cases the 30 sampled matches i.e there are no kills with all three previous points at the same time 4.2 Damages data The damages data frame contains information about each damage a player receives. A damage results in less health points. Most damages (98 percent) are inflicted by a player (bullet or grenade damages). But about 2 percent of damages are not dealt by a player. Those are caused by the game environment: falling damage or bomb damage (no player is linked to a planted bomb). Pattern 2 shows the affected variables "],["results.html", "Chapter 5 Results", " Chapter 5 Results ## ## Call: ## lm(formula = relative_score_diff ~ kpr + adr + first_kill_percent + ## grenades_per_round + attack_grenades_round + smokes_per_round + ## assist_percent + non_traded_percent + avg_flash_duration, ## data = team_killsstat) ## ## Residuals: ## Min 1Q Median 3Q Max ## -1.2786 -0.1369 -0.0153 0.1025 12.7381 ## ## Coefficients: (1 not defined because of singularities) ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -2.159002 0.310137 -6.961 6.26e-12 *** ## kpr 1.098123 0.128731 8.530 &lt; 2e-16 *** ## adr -0.008681 0.001503 -5.776 1.04e-08 *** ## first_kill_percent 0.556315 0.177298 3.138 0.00175 ** ## grenades_per_round 0.129022 0.046214 2.792 0.00535 ** ## attack_grenades_round -0.097034 0.058489 -1.659 0.09744 . ## smokes_per_round NA NA NA NA ## assist_percent -0.013587 0.092676 -0.147 0.88347 ## non_traded_percent 0.908901 0.336880 2.698 0.00710 ** ## avg_flash_duration 0.012487 0.005443 2.294 0.02199 * ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.4564 on 954 degrees of freedom ## Multiple R-squared: 0.4303, Adjusted R-squared: 0.4255 ## F-statistic: 90.06 on 8 and 954 DF, p-value: &lt; 2.2e-16 Top teams for each event PCA We now color points so that teams that have won appear in a certain color, and teams that didnt appear in another color. We also make arrow stand out a bit more, and add the correlation circle. "],["interactive-component.html", "Chapter 6 Interactive component", " Chapter 6 Interactive component Click to see the interactive component in full size .btn { background-color: white; color: black; border: 2px solid #008CBA; border-radius: 5px; padding: 5px 8px; box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19); } .btn:hover { background-color: #008CBA; box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19); color: white; } .row { width: 100%; display: flex; flex-direction: row; justify-content: center; } .block { display: block; margin-left: auto; margin-right: auto; } h4, h2{ text-align: center; } .buttonrow{ width: 60%; } /* The switch - the box around the slider */ .switch { position: relative; display: inline-block; width: 60px; height: 34px; } /* Hide default HTML checkbox */ .switch input { opacity: 0; width: 0; height: 0; } /* The slider */ .slider { position: absolute; cursor: pointer; top: 0; left: 0; right: 0; bottom: 0; background-color: #ccc; -webkit-transition: .4s; transition: .4s; } .slider:before { position: absolute; content: \"\"; height: 26px; width: 26px; left: 4px; bottom: 4px; background-color: white; -webkit-transition: .4s; transition: .4s; } input:checked + .slider { background-color: #2196F3; } input:focus + .slider { box-shadow: 0 0 1px #2196F3; } input:checked + .slider:before { -webkit-transform: translateX(26px); -ms-transform: translateX(26px); transform: translateX(26px); } /* Rounded sliders */ .slider.round { border-radius: 34px; } .slider.round:before { border-radius: 50%; } .svg-container { display: inline-block; display: block; margin-left: auto; margin-right: auto; position: relative; width: 100%; padding-bottom: 100%; /* aspect ratio */ vertical-align: top; overflow: hidden; } .svg-content-responsive { display: inline-block; position: absolute; top: 10px; left: 0; } svg .rect { fill: gold; stroke: steelblue; stroke-width: 5px; } div.tooltip-donut { position: absolute; text-align: center; padding: .5rem; background: #FFFFFF; color: #313639; border: 1px solid #313639; border-radius: 8px; pointer-events: none; font-size: 1.3rem; } Event, team and map selection 2d-density of attacker position Show attacker positions Show victim positions Show trajectories Change team side data Showing CT side "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
